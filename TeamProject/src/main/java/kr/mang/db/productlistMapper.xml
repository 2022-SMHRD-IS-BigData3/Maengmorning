<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- SQL구문 기술하는 공간 -->
<mapper namespace="kr.mang.model.ProductlistDAO">
	<!-- namespace : 해당하는 mapper 파일을 사용하게 될 DAO의 이름을 작성해주는 것이 원칙 -->
	<!-- paramterType : DAO에서 받아오는 데이터가 있을 때 작성 >> 반드시 full name 작성(패키지 명까지) -->
	
	<!-- 등록물품 리스트 -->
	<select id="productlist" resultType="kr.mang.model.ProductlistVO"><!-- resultType은 select할때 사용 -->
  		SELECT i.ITEMS_ID, i.TITLE,i.ITEMS_STATE,i.PRICE,i.UP_DATE,i.USER_ID,img.FILE_NAME
		  FROM ITEMS i
				LEFT OUTER JOIN ITEMS_IMG img ON i.ITEMS_IMG_ID = img.ITEMS_IMG_ID
		 ORDER BY i.ITEMS_IMG_ID DESC
  </select>
	
	<select id="imglist" resultType="kr.mang.model.ProductlistVO"><!-- resultType은 select할때 사용 -->
  		SELECT c.FILE_NAME as file_name
		  FROM ITEMS x 
		  LEFT OUTER JOIN ITEMS_IMG c ON x.ITEMS_IMG_ID = c.ITEMS_IMG_ID
		 ORDER BY x.ITEMS_IMG_ID DESC
  </select>
  
  
  
  <!-- 등록물품 상세보기 -->
  <select id="productdetail" parameterType="int" resultType="kr.mang.model.ProductlistVO">
 SELECT A.FILE_NAME, B.ITEMS_ID, B.TITLE, B.ITEMS_STATE, B.PRICE, B.UP_DATE
      , B.USER_ID, B.TAG_ID
   FROM ITEMS_IMG A LEFT OUTER JOIN ITEMS B ON (A.ITEMS_IMG_ID = B.ITEMS_IMG_ID)
  WHERE B.ITEMS_ID = #{items_id}
  </select>
 
 

  
  
  <!-- 물품 판매글 등록 -->
  <insert id="productinput" parameterType="kr.mang.model.ProductlistVO">
  	insert into ITEMS(ITEMS_ID, TITLE, ITEMS_STATE, PRICE, UP_DATE, ITEMS_IMG_ID,USER_ID,TAG_ID)
  	values(ITEMS_ID.nextval, #{title}, #{items_state}, #{price}, sysdate, NULL, NULL, #{tag_id})
  </insert>
  
  <insert id="imginput" parameterType="kr.mang.model.ProductlistVO">
  	insert into ITEMS_IMG(ITEMS_IMG_ID, PATH_IMG, FILE_NAME)
  	values('U'||ITEMS_IMG_ID.nextval, NULL,#{file_name})
  </insert>
  
</mapper>